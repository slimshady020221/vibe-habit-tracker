{"ast":null,"code":"import React from'react';import{getStreak}from'../utils/localStorage';// Helper to get the start of the current week (Sunday)\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const getStartOfWeek=date=>{const d=new Date(date);const day=d.getDay();const diff=d.getDate()-day;return new Date(d.setDate(diff));};// ProgressBar Component\nconst ProgressBar=_ref=>{let{percentage,color}=_ref;const cappedPercentage=Math.min(percentage,100);return/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-2.5 rounded-full transition-all duration-500\",style:{width:\"\".concat(cappedPercentage,\"%\"),backgroundColor:color||'#4f46e5'}})});};const HabitList=_ref2=>{let{habits,onCheck,onDelete}=_ref2;const today=new Date().toISOString().slice(0,10);const calculateProgress=habit=>{const{frequency,targetCount,completedDates}=habit;if(!completedDates)return{current:0,percentage:0};const now=new Date();let relevantCompletions=[];if(frequency==='Daily'){const isCompletedToday=completedDates.includes(today);return{current:isCompletedToday?1:0,percentage:isCompletedToday?100:0};}else if(frequency==='Weekly'){const startOfWeek=getStartOfWeek(now);startOfWeek.setHours(0,0,0,0);relevantCompletions=completedDates.filter(date=>new Date(date)>=startOfWeek);}else if(frequency==='Monthly'){const startOfMonth=new Date(now.getFullYear(),now.getMonth(),1);relevantCompletions=completedDates.filter(date=>new Date(date)>=startOfMonth);}const percentage=targetCount>0?relevantCompletions.length/targetCount*100:0;return{current:relevantCompletions.length,percentage};};if(habits.length===0){return/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-gray-500 dark:text-gray-400\",children:\"\\uC544\\uC9C1 \\uB4F1\\uB85D\\uB41C \\uC2B5\\uAD00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uC0C8\\uB85C\\uC6B4 \\uC2B5\\uAD00\\uC744 \\uCD94\\uAC00\\uD574\\uBCF4\\uC138\\uC694!\"});}return/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-4\",children:habits.map(habit=>{var _habit$completedDates;const progress=calculateProgress(habit);const isCompletedToday=(_habit$completedDates=habit.completedDates)===null||_habit$completedDates===void 0?void 0:_habit$completedDates.includes(today);const habitColor=habit.color||'#4f46e5';return/*#__PURE__*/_jsxs(\"li\",{className:\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md transition-transform transform hover:scale-105\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>onCheck(habit.id),className:\"w-8 h-8 rounded-full border-2 flex-shrink-0 mr-4 flex items-center justify-center text-white\",style:{backgroundColor:isCompletedToday?habitColor:'transparent',borderColor:habitColor},children:isCompletedToday&&'✔'}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-800 dark:text-gray-200\",children:habit.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-semibold px-2 py-1 rounded-full mr-4\",style:{backgroundColor:\"\".concat(habitColor,\"20\"),color:habitColor},children:[\"\\uC5F0\\uC18D \",getStreak(habit.completedDates),\"\\uC77C\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onDelete(habit.id),className:\"text-gray-400 hover:text-red-500 font-bold py-1 px-2 rounded\",children:\"\\u2715\"})]})]}),habit.frequency!=='Daily'&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-sm text-gray-600 dark:text-gray-400 mb-1\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uC9C4\\uD589\\uB960\"}),/*#__PURE__*/_jsxs(\"span\",{children:[progress.current,\" / \",habit.targetCount]})]}),/*#__PURE__*/_jsx(ProgressBar,{percentage:progress.percentage,color:habitColor})]})]},habit.id);})});};export default HabitList;","map":{"version":3,"names":["React","getStreak","jsx","_jsx","jsxs","_jsxs","getStartOfWeek","date","d","Date","day","getDay","diff","getDate","setDate","ProgressBar","_ref","percentage","color","cappedPercentage","Math","min","className","children","style","width","concat","backgroundColor","HabitList","_ref2","habits","onCheck","onDelete","today","toISOString","slice","calculateProgress","habit","frequency","targetCount","completedDates","current","now","relevantCompletions","isCompletedToday","includes","startOfWeek","setHours","filter","startOfMonth","getFullYear","getMonth","length","map","_habit$completedDates","progress","habitColor","onClick","id","borderColor","name"],"sources":["C:/Users/김민규/Desktop/vibe-habit-tracker/src/components/HabitList.jsx"],"sourcesContent":["\nimport React from 'react';\nimport { getStreak } from '../utils/localStorage';\n\n// Helper to get the start of the current week (Sunday)\nconst getStartOfWeek = (date) => {\n    const d = new Date(date);\n    const day = d.getDay();\n    const diff = d.getDate() - day;\n    return new Date(d.setDate(diff));\n}\n\n// ProgressBar Component\nconst ProgressBar = ({ percentage, color }) => {\n  const cappedPercentage = Math.min(percentage, 100);\n  return (\n    <div className=\"w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\">\n      <div \n        className=\"h-2.5 rounded-full transition-all duration-500\"\n        style={{ width: `${cappedPercentage}%`, backgroundColor: color || '#4f46e5' }}\n      ></div>\n    </div>\n  );\n};\n\nconst HabitList = ({ habits, onCheck, onDelete }) => {\n  const today = new Date().toISOString().slice(0, 10);\n\n  const calculateProgress = (habit) => {\n    const { frequency, targetCount, completedDates } = habit;\n    if (!completedDates) return { current: 0, percentage: 0 };\n\n    const now = new Date();\n    let relevantCompletions = [];\n\n    if (frequency === 'Daily') {\n        const isCompletedToday = completedDates.includes(today);\n        return { current: isCompletedToday ? 1 : 0, percentage: isCompletedToday ? 100 : 0 };\n    } else if (frequency === 'Weekly') {\n        const startOfWeek = getStartOfWeek(now);\n        startOfWeek.setHours(0, 0, 0, 0);\n        relevantCompletions = completedDates.filter(date => new Date(date) >= startOfWeek);\n    } else if (frequency === 'Monthly') {\n        const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n        relevantCompletions = completedDates.filter(date => new Date(date) >= startOfMonth);\n    }\n    \n    const percentage = targetCount > 0 ? (relevantCompletions.length / targetCount) * 100 : 0;\n    return { current: relevantCompletions.length, percentage };\n  };\n\n  if (habits.length === 0) {\n    return <p className=\"text-center text-gray-500 dark:text-gray-400\">아직 등록된 습관이 없습니다. 새로운 습관을 추가해보세요!</p>;\n  }\n\n  return (\n    <ul className=\"space-y-4\">\n      {habits.map(habit => {\n        const progress = calculateProgress(habit);\n        const isCompletedToday = habit.completedDates?.includes(today);\n        const habitColor = habit.color || '#4f46e5';\n\n        return (\n          <li key={habit.id} className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md transition-transform transform hover:scale-105\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"flex items-center\">\n                <button\n                  onClick={() => onCheck(habit.id)}\n                  className={`w-8 h-8 rounded-full border-2 flex-shrink-0 mr-4 flex items-center justify-center text-white`}\n                  style={{ \n                    backgroundColor: isCompletedToday ? habitColor : 'transparent', \n                    borderColor: habitColor \n                  }}\n                >\n                  {isCompletedToday && '✔'}\n                </button>\n                <span className=\"font-medium text-gray-800 dark:text-gray-200\">{habit.name}</span>\n              </div>\n              <div className=\"flex items-center\">\n                <span \n                  className=\"text-sm font-semibold px-2 py-1 rounded-full mr-4\"\n                  style={{ backgroundColor: `${habitColor}20`, color: habitColor }}\n                >\n                  연속 {getStreak(habit.completedDates)}일\n                </span>\n                <button\n                  onClick={() => onDelete(habit.id)}\n                  className=\"text-gray-400 hover:text-red-500 font-bold py-1 px-2 rounded\"\n                >\n                  ✕\n                </button>\n              </div>\n            </div>\n            {habit.frequency !== 'Daily' && (\n                <div className=\"mt-3\">\n                    <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400 mb-1\">\n                        <span>진행률</span>\n                        <span>{progress.current} / {habit.targetCount}</span>\n                    </div>\n                    <ProgressBar percentage={progress.percentage} color={habitColor} />\n                </div>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default HabitList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}