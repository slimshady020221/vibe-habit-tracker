{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uADDC\\\\Desktop\\\\vibe-habit-tracker\\\\src\\\\components\\\\HabitList.jsx\";\nimport React from 'react';\nimport { getStreak } from '../utils/localStorage';\n\n// Helper to get the start of the current week (Sunday)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getStartOfWeek = date => {\n  const d = new Date(date);\n  const day = d.getDay();\n  const diff = d.getDate() - day;\n  return new Date(d.setDate(diff));\n};\n\n// ProgressBar Component\nconst ProgressBar = ({\n  percentage,\n  color\n}) => {\n  const cappedPercentage = Math.min(percentage, 100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-2.5 rounded-full transition-all duration-500\",\n      style: {\n        width: `${cappedPercentage}%`,\n        backgroundColor: color || '#4f46e5'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressBar;\nconst HabitList = ({\n  habits,\n  onCheck,\n  onDelete\n}) => {\n  const today = new Date().toISOString().slice(0, 10);\n  const calculateProgress = habit => {\n    const {\n      frequency,\n      targetCount,\n      completedDates\n    } = habit;\n    if (!completedDates) return {\n      current: 0,\n      percentage: 0\n    };\n    const now = new Date();\n    let relevantCompletions = [];\n    if (frequency === 'Daily') {\n      const isCompletedToday = completedDates.includes(today);\n      return {\n        current: isCompletedToday ? 1 : 0,\n        percentage: isCompletedToday ? 100 : 0\n      };\n    } else if (frequency === 'Weekly') {\n      const startOfWeek = getStartOfWeek(now);\n      startOfWeek.setHours(0, 0, 0, 0);\n      relevantCompletions = completedDates.filter(date => new Date(date) >= startOfWeek);\n    } else if (frequency === 'Monthly') {\n      const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n      relevantCompletions = completedDates.filter(date => new Date(date) >= startOfMonth);\n    }\n    const percentage = targetCount > 0 ? relevantCompletions.length / targetCount * 100 : 0;\n    return {\n      current: relevantCompletions.length,\n      percentage\n    };\n  };\n  if (habits.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-500 dark:text-gray-400\",\n      children: \"\\uC544\\uC9C1 \\uB4F1\\uB85D\\uB41C \\uC2B5\\uAD00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uC0C8\\uB85C\\uC6B4 \\uC2B5\\uAD00\\uC744 \\uCD94\\uAC00\\uD574\\uBCF4\\uC138\\uC694!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"space-y-4\",\n    children: habits.map(habit => {\n      var _habit$completedDates;\n      const progress = calculateProgress(habit);\n      const isCompletedToday = (_habit$completedDates = habit.completedDates) === null || _habit$completedDates === void 0 ? void 0 : _habit$completedDates.includes(today);\n      const habitColor = habit.color || '#4f46e5';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md transition-transform transform hover:scale-105\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onCheck(habit.id),\n              className: `w-8 h-8 rounded-full border-2 flex-shrink-0 mr-4 flex items-center justify-center text-white`,\n              style: {\n                backgroundColor: isCompletedToday ? habitColor : 'transparent',\n                borderColor: habitColor\n              },\n              children: isCompletedToday && '✔'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium text-gray-800 dark:text-gray-200\",\n              children: habit.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-semibold px-2 py-1 rounded-full mr-4\",\n              style: {\n                backgroundColor: `${habitColor}20`,\n                color: habitColor\n              },\n              children: [\"\\uC5F0\\uC18D \", getStreak(habit.completedDates), \"\\uC77C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onDelete(habit.id),\n              className: \"text-gray-400 hover:text-red-500 font-bold py-1 px-2 rounded\",\n              children: \"\\u2715\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), habit.frequency !== 'Daily' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between text-sm text-gray-600 dark:text-gray-400 mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC9C4\\uD589\\uB960\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [progress.current, \" / \", habit.targetCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n            percentage: progress.percentage,\n            color: habitColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, habit.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c2 = HabitList;\nexport default HabitList;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProgressBar\");\n$RefreshReg$(_c2, \"HabitList\");","map":{"version":3,"names":["React","getStreak","jsxDEV","_jsxDEV","getStartOfWeek","date","d","Date","day","getDay","diff","getDate","setDate","ProgressBar","percentage","color","cappedPercentage","Math","min","className","children","style","width","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","HabitList","habits","onCheck","onDelete","today","toISOString","slice","calculateProgress","habit","frequency","targetCount","completedDates","current","now","relevantCompletions","isCompletedToday","includes","startOfWeek","setHours","filter","startOfMonth","getFullYear","getMonth","length","map","_habit$completedDates","progress","habitColor","onClick","id","borderColor","name","_c2","$RefreshReg$"],"sources":["C:/Users/김민규/Desktop/vibe-habit-tracker/src/components/HabitList.jsx"],"sourcesContent":["\nimport React from 'react';\nimport { getStreak } from '../utils/localStorage';\n\n// Helper to get the start of the current week (Sunday)\nconst getStartOfWeek = (date) => {\n    const d = new Date(date);\n    const day = d.getDay();\n    const diff = d.getDate() - day;\n    return new Date(d.setDate(diff));\n}\n\n// ProgressBar Component\nconst ProgressBar = ({ percentage, color }) => {\n  const cappedPercentage = Math.min(percentage, 100);\n  return (\n    <div className=\"w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\">\n      <div \n        className=\"h-2.5 rounded-full transition-all duration-500\"\n        style={{ width: `${cappedPercentage}%`, backgroundColor: color || '#4f46e5' }}\n      ></div>\n    </div>\n  );\n};\n\nconst HabitList = ({ habits, onCheck, onDelete }) => {\n  const today = new Date().toISOString().slice(0, 10);\n\n  const calculateProgress = (habit) => {\n    const { frequency, targetCount, completedDates } = habit;\n    if (!completedDates) return { current: 0, percentage: 0 };\n\n    const now = new Date();\n    let relevantCompletions = [];\n\n    if (frequency === 'Daily') {\n        const isCompletedToday = completedDates.includes(today);\n        return { current: isCompletedToday ? 1 : 0, percentage: isCompletedToday ? 100 : 0 };\n    } else if (frequency === 'Weekly') {\n        const startOfWeek = getStartOfWeek(now);\n        startOfWeek.setHours(0, 0, 0, 0);\n        relevantCompletions = completedDates.filter(date => new Date(date) >= startOfWeek);\n    } else if (frequency === 'Monthly') {\n        const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n        relevantCompletions = completedDates.filter(date => new Date(date) >= startOfMonth);\n    }\n    \n    const percentage = targetCount > 0 ? (relevantCompletions.length / targetCount) * 100 : 0;\n    return { current: relevantCompletions.length, percentage };\n  };\n\n  if (habits.length === 0) {\n    return <p className=\"text-center text-gray-500 dark:text-gray-400\">아직 등록된 습관이 없습니다. 새로운 습관을 추가해보세요!</p>;\n  }\n\n  return (\n    <ul className=\"space-y-4\">\n      {habits.map(habit => {\n        const progress = calculateProgress(habit);\n        const isCompletedToday = habit.completedDates?.includes(today);\n        const habitColor = habit.color || '#4f46e5';\n\n        return (\n          <li key={habit.id} className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md transition-transform transform hover:scale-105\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"flex items-center\">\n                <button\n                  onClick={() => onCheck(habit.id)}\n                  className={`w-8 h-8 rounded-full border-2 flex-shrink-0 mr-4 flex items-center justify-center text-white`}\n                  style={{ \n                    backgroundColor: isCompletedToday ? habitColor : 'transparent', \n                    borderColor: habitColor \n                  }}\n                >\n                  {isCompletedToday && '✔'}\n                </button>\n                <span className=\"font-medium text-gray-800 dark:text-gray-200\">{habit.name}</span>\n              </div>\n              <div className=\"flex items-center\">\n                <span \n                  className=\"text-sm font-semibold px-2 py-1 rounded-full mr-4\"\n                  style={{ backgroundColor: `${habitColor}20`, color: habitColor }}\n                >\n                  연속 {getStreak(habit.completedDates)}일\n                </span>\n                <button\n                  onClick={() => onDelete(habit.id)}\n                  className=\"text-gray-400 hover:text-red-500 font-bold py-1 px-2 rounded\"\n                >\n                  ✕\n                </button>\n              </div>\n            </div>\n            {habit.frequency !== 'Daily' && (\n                <div className=\"mt-3\">\n                    <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400 mb-1\">\n                        <span>진행률</span>\n                        <span>{progress.current} / {habit.targetCount}</span>\n                    </div>\n                    <ProgressBar percentage={progress.percentage} color={habitColor} />\n                </div>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default HabitList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}